SPOTIFY DATA EXPLORATION & CTE CREATION

-- Start by creating your table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

-- Ensure the tables columns are reflecting as necessary
SELECT * 
FROM BIT_DB.Spotifydata;


IMPORT THE DATA AND START EXPLORING:

-- What was the most popular song in 2021?
SELECT artist_name,
    track_name AS song_name,
    popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC;

-- What are the top 10 most popular songs? Provide the artist and song name, in order of popularity score.
SELECT artist_name,
    track_name AS song_name,
    popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

-- What 5 songs had the highest dancability score?
SELECT artist_name,
    track_name AS song_name,
    danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 5;

-- Let's narrow the results down to the top danceability song.
SELECT artist_name, 
    track_name AS song_name,
    MAX(danceability)
FROM BIT_DB.Spotifydata;

-- What was the song with the longest duration?
SELECT track_name AS song_name,
    MAX(duration_ms)
FROM BIT_DB.Spotifydata;

-- What was the least loud song in 2021, based on the loudness scoring? Include song name as well as loudness score.
SELECT track_name AS song_name,
    MIN(loudness) AS loudness_score
FROM BIT_DB.Spotifydata;

-- Extend that same search, but show the top 10 least loud songs. Include song name as well as loudness score.
SELECT loudness AS loudness_score, 
    track_name AS song_name
FROM BIT_DB.Spotifydata
ORDER BY loudness_score ASC
LIMIT 10;


-- USING A CTE, Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
SELECT
	artist_name, 
	AVG(popularity) AS average_popularity
FROM Spotifydata
GROUP BY artist_name
)

SELECT 
	artist_name,
	average_popularity,
	'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity >= 90;
